"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[84],{3905:function(e,t,a){a.d(t,{Zo:function(){return s},kt:function(){return f}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},s=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=c(a),f=r,g=d["".concat(l,".").concat(f)]||d[f]||u[f]||o;return a?n.createElement(g,p(p({ref:t},s),{},{components:a})):n.createElement(g,p({ref:t},s))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,p=new Array(o);p[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,p[1]=i;for(var c=2;c<o;c++)p[c]=a[c];return n.createElement.apply(null,p)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},4579:function(e,t,a){a.r(t),a.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return u}});var n=a(7462),r=a(3366),o=(a(7294),a(3905)),p=["components"],i={},l="Update a page",c={unversionedId:"page/update-page",id:"page/update-page",title:"Update a page",description:"Notion allows you to update:",source:"@site/../docs/page/update-page.md",sourceDirName:"page",slug:"/page/update-page",permalink:"/zio-notion/page/update-page",draft:!1,editUrl:"https://github.com/univalence/zio-notion/edit/master/docs/../docs/page/update-page.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Retrieve a page",permalink:"/zio-notion/page/retrieve-page"},next:{title:"How to query a database",permalink:"/zio-notion/database/query-db"}},s={},u=[],d={toc:u};function f(e){var t=e.components,a=(0,r.Z)(e,p);return(0,o.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"update-a-page"},"Update a page"),(0,o.kt)("p",null,"Notion allows you to update:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The properties content of the page (including its title)"),(0,o.kt)("li",{parentName:"ul"},"The icon of the page"),(0,o.kt)("li",{parentName:"ul"},"The cover of the page"),(0,o.kt)("li",{parentName:"ul"},"Whether you want to archive the page or not")),(0,o.kt)("p",null,"For more information, you can check the ",(0,o.kt)("a",{parentName:"p",href:"https://developers.notion.com/reference/patch-page"},"notion documentation"),"."),(0,o.kt)("p",null,"Strictly speaking, you have to provide a list of operations describing the list of changes from the current page to the\nexpected one."),(0,o.kt)("p",null,"There is two types of operations :"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Stateless operations are operations that does not require the current state of the page to generate a patch. As an\nexample, ",(0,o.kt)("inlineCode",{parentName:"li"},"removeIcon")," is a stateless operation because we don't need to explicitly know if the page already has an\nicon or not."),(0,o.kt)("li",{parentName:"ul"},"Stateful operations are operations that does require the current state of the page. The only current stateful\noperation is ",(0,o.kt)("inlineCode",{parentName:"li"},"UpdateProperty"),". It indeed requires the current page property to update it.")),(0,o.kt)("p",null,"We explicitly differentiate the operations because stateless operations does not require a page to work. It means that\nwe don't have to retrieve the page first to update it. That is why the ",(0,o.kt)("strong",{parentName:"p"},"Notion")," interface provides several\nupdate methods :"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"def updatePage(pageId: String, operations: StatelessOperations): IO[NotionError, Page]\ndef updatePage(page: Page, operations: Operations): IO[NotionError, Page]\ndef updatePage(pageId: String, operations: Operation.Stateless): IO[NotionError, Page]\ndef updatePage(page: Page, operations: Operation): IO[NotionError, Page]\n")),(0,o.kt)("p",null,"We provide several kind of operations that can compose:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import zio.notion.dsl._ // We advise you to import the dsl\n\nval operations = $"col1".asCheckbox.patch.check ++ removeIcon\n')),(0,o.kt)("p",null,"Here is a non-exhaustive list of operation:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'val operation = archive                        // Archive the page (Stateless)\nval operation = unarchive                      // Unarchive the page (Stateless)\nval operation = removeIcon                     // Remove the current icon of the page (Stateless)\nval operation = removeCover                    // Remove the current cover of the page (Stateless)\nval operation = setIcon(newIcon)               // Set a new icon to the page (Stateless)\nval operation = setCover(newCover)             // Set a new cover to the page (Stateless)\nval operation = removeProperty(propertyName)   // Remove the propertyName property of the page (Stateless)\nval operation = $"col1".asCheckbox.patch.check // Check the col1 checkbox property (Stateless)\nval operation = $"col1".asNumber.patch.ceil    // Apply a transformation to the col1 number property (Stateful)\n')),(0,o.kt)("p",null,"We advise you to check autocompletion for ",(0,o.kt)("inlineCode",{parentName:"p"},'$"col1".as'),", we provide operations for all notion types."),(0,o.kt)("p",null,"You also can create your own, as an example, if I want to multiply a number by itself:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'val operation = $"col1".asNumber.patch.update(n => n * n) // It is an update (Stateful)\n')))}f.isMDXComponent=!0}}]);