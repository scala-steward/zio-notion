"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[875],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(n),m=r,y=c["".concat(p,".").concat(m)]||c[m]||d[m]||o;return n?a.createElement(y,i(i({ref:t},u),{},{components:n})):a.createElement(y,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},932:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return d}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],l={},p="How to query a database",s={unversionedId:"database/query-db",id:"database/query-db",title:"How to query a database",description:"Query a database is useful if you want to retrieve all the pages composing the database.",source:"@site/../docs/database/query-db.md",sourceDirName:"database",slug:"/database/query-db",permalink:"/zio-notion/database/query-db",draft:!1,editUrl:"https://github.com/univalence/zio-notion/edit/master/docs/../docs/database/query-db.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Update a page",permalink:"/zio-notion/page/update-page"},next:{title:"Retrieve a database",permalink:"/zio-notion/database/retrieve-db"}},u={},d=[{value:"Pagination",id:"pagination",level:2},{value:"Filter &amp; Sorts",id:"filter--sorts",level:2},{value:"Column",id:"column",level:3},{value:"Sorts",id:"sorts",level:3},{value:"Filters",id:"filters",level:3},{value:"Example",id:"example",level:2}],c={toc:d};function m(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"how-to-query-a-database"},"How to query a database"),(0,o.kt)("p",null,"Query a database is useful if you want to retrieve all the pages composing the database. "),(0,o.kt)("h2",{id:"pagination"},"Pagination"),(0,o.kt)("p",null,"If you call ",(0,o.kt)("inlineCode",{parentName:"p"},"Notion.queryDatabase")," to retrieve your database content, you will need to give a pagination object too.\nThe pagination object will tell Notion what to retrieve. Using this object you can specify how many pages you want to\nretrieve and when to start the count. We advise looking at\n",(0,o.kt)("a",{parentName:"p",href:"https://developers.notion.com/reference/pagination"},"Notion pagination documentation")," for more information."),(0,o.kt)("p",null,"Nevertheless, we provide the function ",(0,o.kt)("inlineCode",{parentName:"p"},"Notion.queryAllDatabase")," that will handle pagination for you."),(0,o.kt)("h2",{id:"filter--sorts"},"Filter & Sorts"),(0,o.kt)("p",null,"You can query the whole database, but you generally want to retrieve a subset of the database."),(0,o.kt)("p",null,"You can select what kind of information you want specifying a Query object containing information about how you want\nto sort the result (based on certain column) or what do you want to retrieve (based on certain column)."),(0,o.kt)("p",null,"It can be a bit cumbersome to write the object by hand, we advise you to use the DSL to create our own filters and sorts."),(0,o.kt)("p",null,"To start using the DSL you need the following import:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"import zio.notion.dsl._\n")),(0,o.kt)("h3",{id:"column"},"Column"),(0,o.kt)("p",null,"Both filter and sorts can be applied to databases columns (ie: what's underneath a database property)."),(0,o.kt)("p",null,"You can declare a column using ",(0,o.kt)("inlineCode",{parentName:"p"},"$")," as such:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'val col: Column = $"My property"\n')),(0,o.kt)("h3",{id:"sorts"},"Sorts"),(0,o.kt)("p",null,"Sorts can be defined using a column:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'val sorts = $"Col1"\n')),(0,o.kt)("p",null,"It  means that we want the pages sorted using the ",(0,o.kt)("strong",{parentName:"p"},"Col1")," property in ascending order."),(0,o.kt)("p",null,"You can also use ",(0,o.kt)("inlineCode",{parentName:"p"},"col.descending")," to sort them in descending order:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'val sorts = $"Col1".descending\n')),(0,o.kt)("p",null,"Sorts can be chained using the ",(0,o.kt)("inlineCode",{parentName:"p"},"andThen")," keyword:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'val sorts = $"Col1" andThen byCreatedTime.descending\n')),(0,o.kt)("h3",{id:"filters"},"Filters"),(0,o.kt)("p",null,"Filters can also be defined from a column."),(0,o.kt)("p",null,"Filters are chained using the ",(0,o.kt)("inlineCode",{parentName:"p"},"or")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"and")," keywords:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'val filter = $"Col1".asNumber >= 10 and $"Col2".asDate <= LocalDate.of(2022, 2, 2)\n')),(0,o.kt)("p",null,"In order to apply a filter to a column you must first specify its property type as such:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"my prop".asNumber')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asTitle')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asRichText')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asCheckbox')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asSelect')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asMultiSelect')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asDate')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asPeople')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asFiles')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asUrl')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asEmail')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asPhoneNumber')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asRelation')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asCreatedBy')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asLastEditedBy')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asCreatedTime')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asLastEditedTime'))),(0,o.kt)("p",null,"All filter conditions can be found ",(0,o.kt)("a",{parentName:"p",href:"https://developers.notion.com/reference/post-database-query-filter"},"here")," or using\nautocompletion tools."),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import zio._\nimport zio.notion._\nimport zio.notion.dsl._\n\nimport java.time.LocalDate\n\nobject QueryDatabase extends ZIOAppDefault {\n  def example: ZIO[Notion, NotionError, Unit] = {\n    val filter = $"col1".asNumber >= 10 and $"col2".asDate <= LocalDate.of(2022, 2, 2)\n    val sorts  = $"col1".descending andThen byCreatedTime\n\n    for {\n      database <- Notion.queryAllDatabase("6A074793-D735-4BF6-9159-24351D239BBC", filter combine sorts) // Insert your own database ID\n      _ <-\n        database.results.headOption match {\n          case Some(page) => Console.printLine(s"The first page is ${page.id}").orDie\n          case None       => Console.printLine("There is no page corresponding to the query").orDie\n        }\n    } yield ()\n  }\n\n  override def run: ZIO[Any with ZIOAppArgs with Scope, Any, Any] =\n    example.provide(Notion.layerWith("6A074793-D735-4BF6-9159-24351D239BBC")) // Insert your own bearer\n}\n')))}m.isMDXComponent=!0}}]);